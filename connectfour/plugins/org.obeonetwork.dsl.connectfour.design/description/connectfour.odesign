<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:validation="http://www.eclipse.org/sirius/description/validation/1.1.0" name="connectfour" version="11.1.1.201610211630">
  <ownedViewpoints name="Connect Four" modelFileExtension="connectfour">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Grid" titleExpression="feature:time" initialisation="true" domainClass="connectfour.Grid" enablePopupBars="true">
      <metamodel href="http://www.obeonetwork.org/dsl/connectfour#/"/>
      <validationSet name="Winner">
        <ownedRules xsi:type="validation:SemanticValidationRule" name="A winner has been found" message="aql:'The Winner is ' + self.getWinner().toString()" targetClass="connectfour.Grid">
          <audits auditExpression="aql:self.getWinner() = connectfour::Color::none"/>
        </ownedRules>
      </validationSet>
      <defaultLayer name="Default">
        <containerMappings name="Grid_Grid" semanticCandidatesExpression="var:self" domainClass="connectfour.Grid" childrenPresentation="HorizontalStack">
          <subContainerMappings name="Column" semanticCandidatesExpression="feature:columns" domainClass="connectfour.Column" childrenPresentation="VerticalStack">
            <subContainerMappings name="Header" semanticCandidatesExpression="var:self" domainClass="connectfour.Column">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:''" sizeComputationExpression="10" workspacePath="/org.obeonetwork.dsl.connectfour.design/images/Cell_up.svg">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.oclAsType(connectfour::Column).cells->select(myCell | myCell.color = connectfour::Color::none)->isEmpty()">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="" hideLabelByDefault="true" widthComputationExpression="20" heightComputationExpression="10">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </style>
              </conditionnalStyles>
            </subContainerMappings>
            <subContainerMappings name="CellLine" semanticCandidatesExpression="feature:cells" domainClass="connectfour.Cell">
              <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:''" hideLabelByDefault="true" sizeComputationExpression="20" workspacePath="/org.obeonetwork.dsl.connectfour.design/images/Cell_none.svg">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
              <conditionnalStyles predicateExpression="aql:self.color = connectfour::Color::red">
                <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:''" hideLabelByDefault="true" sizeComputationExpression="20" workspacePath="/org.obeonetwork.dsl.connectfour.design/images/Cell_red.svg">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.color = connectfour::Color::yellow">
                <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="aql:''" hideLabelByDefault="true" sizeComputationExpression="20" workspacePath="/org.obeonetwork.dsl.connectfour.design/images/Cell_yellow.svg">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </conditionnalStyles>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" showIcon="false" labelExpression="" hideLabelByDefault="true">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" showIcon="false" labelExpression="aql:if (self.getWinner() &lt;> connectfour::Color::none) then self.getWinner().toString() + ' is the winner' else (if (self.cells->select(myCell | myCell.color = connectfour::Color::red)->size() &lt; self.cells->select(myCell | myCell.color = connectfour::Color::yellow)->size()) then 'RED' else 'YELLOW' endif) + ' should play'  endif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Players">
          <ownedTools xsi:type="tool:ToolDescription" name="Red" precondition="aql:self.oclIsTypeOf(connectfour::Column) and self.oclAsType(connectfour::Column).cells->select(myCell | myCell.color = connectfour::Color::none)->size() > 0 and self.eContainer(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::red)->size() &lt; self.eContainer(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::yellow)->size() or self.target.oclAsType(connectfour::Player).color = connectfour::Color::yellow" iconPath="/org.obeonetwork.dsl.connectfour.design/images/Cell_red.png">
            <filters precondition="aql:self.target.eContainerOrSelf(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::red)->size() >= self.target.eContainerOrSelf(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::yellow)->size()" elementsToListen="aql:self.eContainerOrSelf(connectfour::Grid).cells">
              <listeners domainClass="connectfour.Cell" featureName="color"/>
            </filters>
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.oclAsType(connectfour::Column).cells->select(myCell | myCell.color = connectfour::Color::none)->last()">
                <subModelOperations xsi:type="tool:SetValue" featureName="color" valueExpression="aql:connectfour::Color::red"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolDescription" name="Yellow" precondition="aql:self.oclIsTypeOf(connectfour::Column) and self.oclAsType(connectfour::Column).cells->select(myCell | myCell.color = connectfour::Color::none)->size() > 0 and self.eContainer(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::red)->size() >= self.eContainer(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::yellow)->size() or self.target.oclAsType(connectfour::Player).color = connectfour::Color::yellow" iconPath="/org.obeonetwork.dsl.connectfour.design/images/Cell_yellow.png">
            <filters precondition="aql:self.target.eContainerOrSelf(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::red)->size() &lt; self.target.eContainerOrSelf(connectfour::Grid).cells->select(myCell | myCell.color = connectfour::Color::yellow)->size()" elementsToListen="aql:self.eContainerOrSelf(connectfour::Grid).cells">
              <listeners domainClass="connectfour.Cell" featureName="color"/>
            </filters>
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.oclAsType(connectfour::Column).cells->select(myCell | myCell.color = connectfour::Color::none)->last()">
                <subModelOperations xsi:type="tool:SetValue" featureName="color" valueExpression="aql:connectfour::Color::yellow"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:OperationAction" name="Reset">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainerOrSelf(connectfour::Grid)">
                <subModelOperations xsi:type="tool:For" expression="feature:cells" iteratorName="cell">
                  <subModelOperations xsi:type="tool:SetValue" featureName="color" valueExpression="aql:connectfour::Color::none"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description:SemanticBasedDecoration" name="CellWin" position="CENTER" decoratorPath="/org.obeonetwork.dsl.connectfour.design/images/add_obj.gif" preconditionExpression="aql:self.isAWinnerCell()" domainClass="connectfour.Cell"/>
        </decorationDescriptionsSet>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="Grids Table" initialisation="true" showOnStartup="true" domainClass="connectfour.ConnectFour">
      <metamodel href="http://www.obeonetwork.org/dsl/connectfour#/"/>
      <ownedRepresentationCreationDescriptions xsi:type="tool_1:DiagramCreationDescription" name="CreateGridDiagram" label="Grid Diagram" diagramDescription="//@ownedViewpoints[name='Connect%20Four']/@ownedRepresentations[name='Grid']">
        <initialOperation>
          <firstModelOperations xsi:type="tool:ChangeContext"/>
        </initialOperation>
        <containerViewVariable name="containerView"/>
        <representationNameVariable name="diagramName"/>
      </ownedRepresentationCreationDescriptions>
      <ownedRepresentationNavigationDescriptions xsi:type="tool_1:DiagramNavigationDescription" name="OpenGrid" diagramDescription="//@ownedViewpoints[name='Connect%20Four']/@ownedRepresentations[name='Grid']">
        <containerViewVariable name="containerView"/>
        <containerVariable name="container"/>
        <representationNameVariable name="diagramName"/>
      </ownedRepresentationNavigationDescriptions>
      <ownedLineMappings name="GridLine" detailDescriptions="//@ownedViewpoints[name='Connect%20Four']/@ownedRepresentations[name='Grids%20Table']/@ownedRepresentationCreationDescriptions[name='CreateGridDiagram']" navigationDescriptions="//@ownedViewpoints[name='Connect%20Four']/@ownedRepresentations[name='Grids%20Table']/@ownedRepresentationNavigationDescriptions[name='OpenGrid']" domainClass="connectfour.Grid" semanticCandidatesExpression="feature:grids" headerLabelExpression="aql:self.precedingSiblings()->size() + 1"/>
      <ownedCreateLine name="CreateGrid" mapping="//@ownedViewpoints[name='Connect%20Four']/@ownedRepresentations[name='Grids%20Table']/@ownedLineMappings[name='GridLine']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="connectfour.Grid" referenceName="grids" variableName="instanceGrid">
          <subModelOperations xsi:type="tool:ChangeContext" browseExpression="service:initializeGrid()"/>
        </firstModelOperation>
      </ownedCreateLine>
      <ownedColumnMappings name="Player1Col" headerLabelExpression="Player 1" featureName="player1" labelExpression="aql:self.player1.name"/>
      <ownedColumnMappings name="Player2Col" headerLabelExpression="Player 2" featureName="player2" labelExpression="aql:self.player2.name"/>
      <ownedColumnMappings name="WinnerCol" headerLabelExpression="Winner" featureName="winner" labelExpression="aql:self.winner.name"/>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:EditionTableDescription" name="PlayersTable" initialisation="true" showOnStartup="true" domainClass="connectfour.ConnectFour">
      <ownedLineMappings name="PlayerLine" domainClass="connectfour.Player" semanticCandidatesExpression="feature:players" headerLabelExpression="aql:''"/>
      <ownedCreateLine name="CreatePlayer" label="New Player" mapping="//@ownedViewpoints[name='Connect%20Four']/@ownedRepresentations[name='PlayersTable']/@ownedLineMappings[name='PlayerLine']">
        <variables name="root" documentation="The semantic root element of the table."/>
        <variables name="element" documentation="The semantic currently edited element."/>
        <variables name="container" documentation="The semantic element corresponding to the view container."/>
        <firstModelOperation xsi:type="tool:CreateInstance" typeName="connectfour.Player" referenceName="players"/>
      </ownedCreateLine>
      <ownedColumnMappings name="name" headerLabelExpression="Name" featureName="name"/>
      <ownedColumnMappings name="VictoriesCol" headerLabelExpression="Victories" featureName="victories" labelExpression="aql:self.victories->size()"/>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.obeonetwork.dsl.connectfour.design.services.ConnectFourServices"/>
  </ownedViewpoints>
</description:Group>
